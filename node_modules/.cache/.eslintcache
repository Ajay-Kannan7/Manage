[{"C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\index.js":"1","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\App.js":"2","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\login\\login.js":"3","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\add-task\\addTask.js":"4","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\home\\homepage.js":"5","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\register\\register.js":"6","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\store\\reducer.js":"7","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\tasks-done\\task-done.js":"8"},{"size":426,"mtime":1667240190503,"results":"9","hashOfConfig":"10"},{"size":1688,"mtime":1691348149484,"results":"11","hashOfConfig":"10"},{"size":1712,"mtime":1671696354695,"results":"12","hashOfConfig":"10"},{"size":1498,"mtime":1691348181588,"results":"13","hashOfConfig":"10"},{"size":5154,"mtime":1691352839753,"results":"14","hashOfConfig":"10"},{"size":2095,"mtime":1691349196885,"results":"15","hashOfConfig":"10"},{"size":446,"mtime":1676708229082,"results":"16","hashOfConfig":"10"},{"size":1058,"mtime":1676709139442,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h7hg2q",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\index.js",[],[],"C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\App.js",["45"],[],"import { BrowserRouter,Routes,Route } from \"react-router-dom\";\nimport {useSelector,useDispatch} from 'react-redux'\nimport RegisterPage from \"./components/register/register\";\nimport LoginPage from \"./components/login/login\";\nimport AddTask from \"./components/add-task/addTask\";\nimport HomePage from \"./components/home/homepage\";\nimport TaskDone from \"./components/tasks-done/task-done\";\nimport axios from \"axios\";\nimport \"./App.css\"\nimport { useEffect } from \"react\";\nfunction App() {\n  let isLoggedIn=localStorage.getItem(\"isLogged\");\n  let userName=localStorage.getItem(\"user\")\n      //redux state management\n  let state=useSelector(state=>{return{...state}})\n  let dispatch=useDispatch();\n    \n  useEffect(()=>{\n      axios.post(\"https://manage-backend.onrender.com/\",{userName})\n      .then(res=>{\n        dispatch({\n          type:\"LOADDATA\",\n          payload:res.data.allData\n        })\n      })\n      .catch(err=>console.log(err))\n\n      axios.post(\"https://manage-backend.onrender.com/task-done\",{userName})\n      .then(res=>{\n          dispatch({\n              type:\"DONETASK\",\n              payload:res.data.done\n          })\n      })\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={isLoggedIn?<HomePage data={state.allData}/>:<LoginPage />}></Route>\n        <Route path=\"/login\" element={<LoginPage />}></Route>\n        <Route path=\"/register\" element={<RegisterPage />}></Route>\n        <Route path=\"/add-task\" element={<AddTask />}></Route>\n        <Route path=\"/tasks-done\" element={<TaskDone data={state.doneData}/>}></Route>\n      </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\login\\login.js",[],[],"C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\add-task\\addTask.js",["46"],[],"import {Link,useNavigate} from 'react-router-dom'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport \"./addTask.css\"\r\nfunction AddTask(){\r\n\r\n    let userName=localStorage.getItem(\"user\")\r\n    let [formValues,handleForm]=useState({\r\n        task:\"\",\r\n    })\r\n\r\n    let navigate=useNavigate();\r\n\r\n    let handleClick=(event)=>{\r\n        let {name,value}=event.target\r\n        handleForm({\r\n            ...formValues,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    let addTask=()=>{\r\n        axios.post(\"https://manage-backend.onrender.com/add-task\",{formValues,userName})\r\n        .then(res=>{\r\n            if(res.data.message===\"Task added successfully!\"){\r\n                alert(res.data.message);\r\n                navigate(\"/\")\r\n                window.location.reload();\r\n            }\r\n            \r\n            else if(res.data.message=\"Task field can't be empty\"){\r\n                alert(res.data.message)\r\n            }\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className=\"main-wrapper\">\r\n            <div className=\"add-task-wrapper\">\r\n                <h1>Enter your task!</h1>\r\n                <input type=\"text\" placeholder=\"Enter your task\" name=\"task\" user={formValues.task} onChange={handleClick}></input>\r\n                <button onClick={addTask}>Add task</button>\r\n            </div>\r\n            <Link className=\"homepage-link\" to=\"/\">Back to homepage!</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\home\\homepage.js",["47"],[],"import { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars,faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { useState } from \"react\";\r\nimport \"./homepage.css\"\r\nimport axios from \"axios\";\r\nfunction HomePage(props){\r\n\r\n  let [updatedValue,setUpdatedValue] = useState({\r\n    update:\"\"\r\n  })\r\n\r\n  let [updatedHeader, setHeader] = useState({\r\n    content:\"\"\r\n  })\r\n  //navbar code\r\n  let [iconValue,handleIcon]=useState({\r\n    initialValue:faBars\r\n  })\r\n\r\n  let data;\r\n  if(props.data===null){\r\n    return\r\n  }\r\n  else{\r\n    data=props.data\r\n  }\r\n  let userName=localStorage.getItem(\"user\")\r\n  \r\n\r\n  let handleClick=()=>{\r\n    let navBox=document.querySelector(\".navigation nav\")\r\n    navBox.classList.toggle(\"visible\")\r\n    handleIcon(()=>{\r\n      if(iconValue.initialValue===faBars){\r\n        return{\r\n          initialValue:faXmark\r\n        }\r\n      }else{\r\n        return{\r\n          initialValue:faBars\r\n        }\r\n      }\r\n    })\r\n  }\r\n  let handleSearch = (event) =>{\r\n    let taskHeader;\r\n    let inputValue = event.target.value.toLowerCase();\r\n    let allTasks = document.querySelectorAll(\".task-wrapper\");\r\n    Array.from(allTasks).forEach(task=>{\r\n      taskHeader = task.children[0].children[0].textContent.toLowerCase();\r\n      if(taskHeader.indexOf(inputValue) !== -1){\r\n        console.log(\"True\")\r\n        task.style.display = \"flex\";\r\n      }\r\n      else{\r\n        console.log(\"False\")\r\n        task.style.display = \"none\";\r\n      }\r\n    })\r\n  }\r\n  let handleDialog = () =>{\r\n    let openDialog = document.querySelectorAll(\".update-button\");\r\n    let closeDialog = document.querySelectorAll(\".close-dialog\");\r\n    let dialog = document.querySelector(\"dialog\")\r\n    openDialog.forEach(open =>{\r\n      open.addEventListener(\"click\",function(){\r\n        setHeader({\r\n          content:open.parentElement.children[0].textContent\r\n        })\r\n        dialog.showModal();\r\n      })\r\n    })\r\n    closeDialog.forEach(open =>{\r\n      open.addEventListener(\"click\",function(){\r\n        dialog.close();\r\n      })\r\n    })\r\n  }\r\n  let handleInputValue = (event) =>{\r\n    let inputValue = event.target.value;\r\n    setUpdatedValue({\r\n      update:inputValue\r\n    })\r\n  }\r\n  let handleUpdate = () =>{\r\n    let enteredValue = updatedValue.update;\r\n    let enteredHeader = updatedHeader.content;\r\n    if(enteredValue == \"\"){\r\n      alert(\"Update value can't be empty!\")\r\n      return;\r\n    }\r\n    axios.put(\"https://manage-backend.onrender.com/update-task\",{enteredValue,enteredHeader})\r\n    .then(res=>{\r\n      alert(res.data.message);\r\n      window.location.reload();\r\n    })\r\n    .catch(err=>{console.log(err)})\r\n    console.log(enteredValue);\r\n  }\r\n  let handleDone=(event)=>{\r\n    let content=event.target.parentElement.children[0].textContent;\r\n    axios.post(\"https://manage-backend.onrender.com/delete-task\",{content,userName})\r\n    .then(res=>{\r\n      if(res){\r\n        alert(res.data.message)\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch(err=>console.log(err))\r\n  }\r\n    return(\r\n        <div className=\"main-wrapper-homepage\">\r\n            <div className=\"navigation\">\r\n            <h1>Manage</h1>\r\n            <FontAwesomeIcon icon={iconValue.initialValue} onClick={handleClick} className=\"hamburger-icon\"/>\r\n            <nav>\r\n            <NavLink className=\"navLinks\" to=\"/\">Home</NavLink>\r\n            <NavLink className=\"navLinks\" to=\"/add-task\">Add-Task</NavLink>\r\n            <NavLink className=\"navLinks\" to=\"/tasks-done\">Tasks-Done</NavLink>\r\n            <NavLink className=\"navLinks\" onClick={()=>{\r\n                localStorage.removeItem(\"isLogged\");\r\n                window.location.reload()\r\n            }}>Logout</NavLink>\r\n            </nav>\r\n            </div>\r\n            <div className=\"user-banner\">\r\n              <h2>Hello there, {userName} !</h2>\r\n              <div className=\"tasks-banner\">\r\n                <dialog className = \"update-dialog\" id=\"dialog\">\r\n                  <h1>Update task!</h1>\r\n                  <input type=\"text\" className=\"update-task\" onChange={handleInputValue} placeholder=\"Search for your tasks!\"></input><br></br>\r\n                  <button className=\"close-dialog\" onClick = {handleUpdate}>Update</button>\r\n                </dialog>\r\n                <h1 className=\"task-header\">All of your tasks</h1>\r\n                <input type=\"text\" className=\"search-tasks\" onChange={handleSearch} placeholder=\"Search for your tasks!\"></input>\r\n                {data.length>0?\r\n                 data.map(elements=>(\r\n                  <div className=\"task-wrapper\">\r\n                    <div className=\"task-main-wrapper\">\r\n                      <h2>{elements.task}</h2>\r\n                    </div>\r\n                    <button onClick={handleDialog} className=\"update-button\">Update</button>\r\n                    <button onClick={handleDone}>Done</button>\r\n                  </div>\r\n                ))\r\n              :\r\n                <h2 className=\"no-task-header\">No tasks as of yet!</h2>\r\n              }\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\register\\register.js",[],[],"C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\store\\reducer.js",[],[],"C:\\Users\\Ajay\\Desktop\\Corizo stuff\\project management\\project-management\\src\\components\\tasks-done\\task-done.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":35,"column":5,"nodeType":"50","endLine":35,"endColumn":7,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":31,"column":21,"nodeType":"54","messageId":"55","endLine":31,"endColumn":65},{"ruleId":"56","severity":1,"message":"57","line":89,"column":21,"nodeType":"58","messageId":"59","endLine":89,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userName'. Either include them or remove the dependency array.","ArrayExpression",["60"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"61","fix":"62"},"Update the dependencies array to be: [dispatch, userName]",{"range":"63","text":"64"},[1149,1151],"[dispatch, userName]"]